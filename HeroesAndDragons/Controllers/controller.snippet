<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>CreateController</Title>
      <Shortcut>contr</Shortcut>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>HeroesAndDragons.Core.ApiModels</Namespace>
        </Import>
        <Import>
          <Namespace>HeroesAndDragons.Core.Entities</Namespace>
        </Import>
        <Import>
          <Namespace>HeroesAndDragons.Core.Interfaces.Services</Namespace>
        </Import>
        <Import>
          <Namespace>HeroesAndDragons.Controllers.Base</Namespace>
        </Import>
        <Import>
          <Namespace>Microsoft.AspNetCore.Authorization</Namespace>
        </Import>
        <Import>
          <Namespace>Microsoft.AspNetCore.Mvc</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal>
          <ID>name</ID>
          <Default>Name</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Delimiter="$">
        <![CDATA[
        [ApiController]
        [Authorize]
        [Route("api/$name$")]
        public class $name$Controller : DefaultController<$name$AddApiModel, $name$GetFullApiModel, $name$Entity, string>
        {
          public $name$Controller(I$name$Service service) : base(service) { }

          /// <summary>
          /// Take all $name$ models
          /// </summary>
          /// <returns></returns>
          [HttpGet]
          [Route("get")]
          public async Task<IActionResult> GetAllAsync()
          {
              return await base.GetAll();
          }

          /// <summary>
          /// Take model $name$ by id
          /// </summary>
          /// <param name="id"></param>
          /// <returns></returns>
          [HttpGet]
          [Route("byid/{id}")]
          public async Task<IActionResult> GetByIdAsync(string id)
          {
              return await base.GetById(id);
          }

          /// <summary>
          /// Update model $name$
          /// </summary>
          /// <param name="id"></param>
          /// <param name="model"></param>
          /// <returns></returns>
          [HttpPut]
          [Route("update/{id}")]
          public async Task<IActionResult> UpdateAsync(string id, [FromBody] $name$AddApiModel model)
          {
              return await base.Put(id, model);
          }

          /// <summary>
          /// Add new model $name$
          /// </summary>
          /// <param name="model"></param>
          /// <returns></returns>
          [HttpPost]
          [Route("add")]
          public async Task<IActionResult> AddAsync([FromBody] $name$AddApiModel model)
          {
              return await base.Post(model);
          }

          /// <summary>
          /// Remove model $name$ from id
          /// </summary>
          /// <param name="id"></param>
          /// <returns></returns>
          [HttpDelete]
          [Route("delete/{id}")]
          public async Task<IActionResult> DeleteAsync(string id)
          {
              return await base.Delete(id);
          }
        }
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
